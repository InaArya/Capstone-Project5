version: 2.1
orbs:
  aws-eks: circleci/aws-eks@2.0
  docker: circleci/docker@2.0.1
  kubernetes: circleci/kubernetes@1.0
  python: circleci/python@1.5.0

jobs:
  deploy-backend:
    docker:
      - image: amazon/aws-cli
    steps:
      # Checkout code from git
      - checkout
        
      - run:
          name: Ensure back-end infrastructure exists
          command: |
            pwd
            ls -l
            aws cloudformation deploy \
              --template-file .circleci/files/backend.yml \
              --tags project=capstone-Project5 \
              --stack-name "backend-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"  
              #exit 1
      - run:
          name: Add back-end ip to ansible inventory
          command: |
            backendip=$(aws ec2 describe-instances \
              --query "Reservations[*].Instances[*].PublicIpAddress" \
              --filters "Name=tag:project,Values=capstone-Project5" \
              --output=text)
            echo $backendip >> .circleci/ansible/machineip.txt
            
  deploy-frontend:
    docker:
      - image: amazon/aws-cli
    steps:
      # Checkout code from git
      - checkout
         
      - run:
          name: Ensure front-end infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/frontend.yml \
              --tags project=capstone-Project5 \
              --stack-name "frontend-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"  
              #exit 1

  create-eks-cluster:
    description: Configure eks cluster
    docker:
      - image: aws-eks/python3
    steps:
      - run:
          name: Ensure eks cluster exists
          command: |
             eksctl create cluster -f .circleci/files/cluster.yml

  cloudfront-update:
    docker:
      - image: amazon/aws-cli
    steps:
      # Checkout code from git
      - checkout

      - run:
          name: Update cloudfront distribution
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/cloudfront.yml \
              --stack-name capstone-Project5-Cloudfront \
              --parameter-overrides WorkflowID="${CIRCLE_WORKFLOW_ID:0:7}" \
              --tags project=capstone

test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get services
          name: Test cluster
          
workflows:
  default:
    jobs:
      - deploy-backend
      - create-eks-cluster:
          requires: [deploy-backend]
      #- deploy-frontend
      - cloudfront-update
      
      #- test-cluster
