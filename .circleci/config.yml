version: 2.1
orbs:
  aws-eks: circleci/aws-eks@2.0
  docker: circleci/docker@2.0.1
  kubernetes: circleci/kubernetes@1.0
  python: circleci/python@1.5.0

jobs:
  deploy-backend:
    docker:
      - image: amazon/aws-cli
    steps:
      # Checkout code from git
      - checkout
        
      - run:
          name: Ensure back-end infrastructure exists
          command: |
            pwd
            ls -l
            aws cloudformation deploy \
              --template-file .circleci/files/backend.yml \
              --tags project=capstone-Project5 \
              --stack-name "backend-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"  
              #exit 1

  deploy-frontend:
    docker:
      - image: amazon/aws-cli
    steps:
      # Checkout code from git
      - checkout
         
      - run:
          name: Ensure front-end infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/frontend.yml \
              --tags project=capstone-Project5 \
              --stack-name "frontend-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"  
              #exit 1

  configure-docker:
    description: Configure Docker environment.
    docker:
      - image: circleci/docker:2.0.1
      auth:
          username: $DOCKER_USER  # can specify string literal values
          password: $DOCKER_PASSWORD
    steps:
      - run:
          name: Configure docker
          when: on_fail
          command: |
            docker build --tag=captone .
            docker image ls
            docker run -p 8000:80 captone
            #exit 1

test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get services
          name: Test cluster
workflows:
  default:
    jobs:
      #- deploy-backend
      #- deploy-frontend
      - configure-docker
      #- test-cluster
